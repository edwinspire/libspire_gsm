/* libspire_gsm.vapi generated by valac.exe 0.12.0, do not modify. */

[CCode (cprefix = "edwinspire", lower_case_cprefix = "edwinspire_")]
namespace edwinspire {
	[CCode (cprefix = "edwinspireGSM", lower_case_cprefix = "edwinspire_gsm_")]
	namespace GSM {
		[CCode (cprefix = "edwinspireGSMMODEM", lower_case_cprefix = "edwinspire_gsm_modem_")]
		namespace MODEM {
			[CCode (cheader_filename = "libspire_gsm.h")]
			public class Deliver : edwinspire.PDU.DELIVER, edwinspire.GSM.MODEM.iSMS {
				public Deliver ();
			}
			[CCode (cheader_filename = "libspire_gsm.h")]
			[Description (blurb = "Conecta y maneja modems GSM", nick = "ModemGSM para manejo de modem GSM")]
			public class ModemGSM : edwinspire.Ports.Modem {
				public ModemGSM ();
				public edwinspire.GSM.MODEM.BatteryCharge BatteryCharge ();
				public edwinspire.GSM.MODEM.BatteryCharge CBC ();
				public string CGSN ();
				public bool CHUP ();
				public string CIMI ();
				public Gee.HashSet<string> CLAC ();
				public bool CLIP (bool Active);
				public bool CMEE_Set (edwinspire.GSM.MODEM.ExpandedErrorMessage messageerror);
				public bool CMGD (int MessageReference);
				public edwinspire.GSM.MODEM.Mode CMGF ();
				public bool CMGF_Set (edwinspire.GSM.MODEM.Mode Mode_);
				public edwinspire.GSM.MODEM.Mode CMGF_Support ();
				public Gee.ArrayList<edwinspire.GSM.MODEM.iSMS> CMGL (edwinspire.GSM.MODEM.SMS_Status Status);
				public Gee.HashSet<edwinspire.GSM.MODEM.SMS_Status> CMGL_Support ();
				public Gee.HashSet<int> CMGL_only_index (edwinspire.GSM.MODEM.SMS_Status Status);
				public int CMGS_PDU (int LengthPDU, string PDU);
				public int CMGS_TXT (string Phone, string Message);
				public int CMGW_PDU (int LengthPDU, string PDU);
				public int CMGW_TXT (string Phone, string Message);
				public edwinspire.GSM.MODEM.PhoneActivityStatus CPAS ();
				public edwinspire.GSM.MODEM.CharSet CSCS ();
				public bool CSCS_Set (edwinspire.GSM.MODEM.CharSet cs);
				public bool CSCS_Set_from_text (string cs);
				public Gee.HashSet<edwinspire.GSM.MODEM.CharSet> CSCS_Support ();
				public edwinspire.GSM.MODEM.SignalQuality CSQ ();
				public bool CallingLineIdentificationPresentation (bool active);
				public Gee.HashSet<edwinspire.GSM.MODEM.CharSet> CharSet_Support ();
				public static string ConvertTextFromModemCharSet (string text, edwinspire.GSM.MODEM.CharSet cs);
				public bool DeleteMessage (int msg_reference);
				public bool ExpandedErrorMessage_Set (edwinspire.GSM.MODEM.ExpandedErrorMessage messageerror);
				public void Features ();
				public string IMEI ();
				public string InternationalMobileSubscriberIdentity ();
				public Gee.HashSet<string> ListAllAvailableATCommands ();
				public Gee.ArrayList<edwinspire.GSM.MODEM.iSMS> ListMessages (edwinspire.GSM.MODEM.SMS_Status Status);
				public Gee.HashSet<int> ListMessagesIndex (edwinspire.GSM.MODEM.SMS_Status Status);
				public Gee.HashSet<edwinspire.GSM.MODEM.SMS_Status> ListMessagesSupport ();
				public Gee.ArrayList<edwinspire.GSM.MODEM.iSMS> ListMessages_All ();
				public edwinspire.GSM.MODEM.Mode MessageFormat ();
				public bool MessageFormat_Set (edwinspire.GSM.MODEM.Mode mode);
				public edwinspire.GSM.MODEM.Mode MessageFormat_Support ();
				public static edwinspire.GSM.MODEM.CharSet ModemCharSetToEnum (string cset);
				public edwinspire.GSM.MODEM.PhoneActivityStatus PhoneActivityStatus ();
				public string ProductSerialNumberIdentification ();
				public edwinspire.GSM.MODEM.SignalQuality SignalQuality ();
				public bool TerminateCall ();
			}
			[CCode (cheader_filename = "libspire_gsm.h")]
			public class Submit : edwinspire.PDU.SUBMIT, edwinspire.GSM.MODEM.iSMS {
				public Submit ();
			}
			[CCode (cheader_filename = "libspire_gsm.h")]
			public interface iSMS : GLib.Object {
				public abstract edwinspire.PDU.Datetime DateTime { get; set; }
				public abstract uint Index { get; set; }
				public abstract string Phone { get; set; }
				public abstract edwinspire.GSM.MODEM.SMS_Status Status { get; set; }
				public abstract string Text { get; set; }
			}
			[CCode (type_id = "EDWINSPIRE_GSM_MODEM_TYPE_BATTERY_CHARGE", cheader_filename = "libspire_gsm.h")]
			[Description (blurb = "Carga de la bateria", nick = "Battery Charge")]
			public struct BatteryCharge {
				public int Level;
				public edwinspire.GSM.MODEM.BatteryConnectionStatus Status;
				public BatteryCharge (edwinspire.GSM.MODEM.BatteryConnectionStatus BatteryConnectionStatus, int BatteryChargeLevel);
			}
			[CCode (type_id = "EDWINSPIRE_GSM_MODEM_TYPE_SIGNAL_QUALITY", cheader_filename = "libspire_gsm.h")]
			public struct SignalQuality {
				public int ReceivedSignalStrengthIndication;
				public int ChannelBitErrorRate;
				public SignalQuality (int rssi = 99, int cber = 99);
			}
			[CCode (cprefix = "EDWINSPIRE_GSM_MODEM_BATTERY_CONNECTION_STATUS_", cheader_filename = "libspire_gsm.h")]
			public enum BatteryConnectionStatus {
				ME_Powered_By_Battery,
				ME_Battery_Connected_But_Isnt_Powered_By_It,
				ME_Battery_Not_Connect,
				Recognized_Power_Fault
			}
			[CCode (cprefix = "EDWINSPIRE_GSM_MODEM_CME_", cheader_filename = "libspire_gsm.h")]
			public enum CME {
				PhoneFailure,
				NoConnectionToPhone,
				PhoneAdaptorLinkReserved,
				OperationNotAllowed,
				OperationNotSupported,
				PH_SIM_PIN_Required,
				PH_FSIM_PIN_Rrequired,
				PH_FSIM_PUK_Required,
				SIM_NotInserted,
				SIM_PIN_Required,
				SIM_PUK_Required,
				SIM_Failure,
				SIM_Busy,
				SIM_Wrong,
				IncorrectPassword,
				SIM_PIN2_Required,
				SIM_PUK2_Rrequired,
				MemoryFull,
				InvalidIndex,
				NotFound,
				MemoryFailure,
				TextStringTooLong,
				InvalidCharactersInTextString,
				DialStringTooLong,
				InvalidCharactersInDialString,
				NoNetworkService,
				NetworkTimeout,
				EmergencyCallsOnly,
				NetworkPersonalizationPIN_Required,
				NetworkPersonalization_PUK_Required,
				NetworkSubsetPersonalization_PIN_Required,
				NetworkSubsetPersonalization_PUK_Required,
				ServiceProviderPersonalization_PIN_Required,
				ServiceProviderPersonalization_PUK_Required,
				CorporatePersonalization_PIN_Required,
				CorporatePersonalization_PUK_Required,
				Unknown
			}
			[CCode (cprefix = "EDWINSPIRE_GSM_MODEM_CHAR_SET_", cheader_filename = "libspire_gsm.h")]
			[Description (blurb = "Set de caracteres", nick = "Modem Charset")]
			public enum CharSet {
				Unknow,
				GSM,
				HEX,
				IRA,
				PCDN,
				ASCII,
				@8859_1,
				@8859_C,
				@8859_A,
				@8859_G,
				@8859_H,
				UCS2,
				UTF8;
				public string ToString ();
			}
			[CCode (cprefix = "EDWINSPIRE_GSM_MODEM_EXPANDED_ERROR_MESSAGE_", cheader_filename = "libspire_gsm.h")]
			[Description (blurb = "Mensajes de error expandido", nick = "Expanded Error Message")]
			public enum ExpandedErrorMessage {
				Suppresses,
				Number,
				Text
			}
			[CCode (cprefix = "EDWINSPIRE_GSM_MODEM_MODE_", cheader_filename = "libspire_gsm.h")]
			[Description (blurb = "", nick = "Modo")]
			public enum Mode {
				PDU,
				TXT,
				BOTH,
				UNKNOW
			}
			[CCode (cprefix = "EDWINSPIRE_GSM_MODEM_MODEM_MODEL_", cheader_filename = "libspire_gsm.h")]
			[Description (blurb = "Modelo de modem", nick = "Modem Model")]
			public enum ModemModel {
				General,
				Motorola,
				TVMobile
			}
			[CCode (cprefix = "EDWINSPIRE_GSM_MODEM_PHONE_ACTIVITY_STATUS_", cheader_filename = "libspire_gsm.h")]
			[Description (blurb = "Actividad del modem GSM", nick = "Phone Activity Status")]
			public enum PhoneActivityStatus {
				Ready,
				Unavailable,
				Unknown,
				Ringing,
				Call,
				Asleep,
				Reserved
			}
			[CCode (cprefix = "EDWINSPIRE_GSM_MODEM_PHONE_BOOK_MEMORY_STORAGE_", cheader_filename = "libspire_gsm.h")]
			public enum PhoneBookMemoryStorage {
				LD,
				ME,
				MT,
				SM,
				TA,
				DC,
				RC,
				MC,
				MV,
				GR,
				HP,
				BC,
				EN,
				CN,
				AP;
				public string ToString ();
			}
			[CCode (cprefix = "EDWINSPIRE_GSM_MODEM_SMS_STATUS_", cheader_filename = "libspire_gsm.h")]
			[Description (blurb = "Estado del mensaje de texto", nick = "SMS Status")]
			public enum SMS_Status {
				RECUNREAD,
				RECREAD,
				STOUNSENT,
				STOSENT,
				ALL,
				UNKNOW;
				public string ToString ();
			}
		}
	}
}
